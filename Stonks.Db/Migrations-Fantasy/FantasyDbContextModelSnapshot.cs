// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stonks.Db;

namespace Stonks.Db.MigrationsFantasy
{
    [DbContext(typeof(FantasyDbContext))]
    partial class FantasyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21");

            modelBuilder.Entity("Stonks.Db.Models.FantasyTeam", b =>
                {
                    b.Property<int>("FantasyTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.HasKey("FantasyTeamId");

                    b.ToTable("FantasyTeams");
                });

            modelBuilder.Entity("Stonks.Db.Models.FantasyTeamMember", b =>
                {
                    b.Property<int>("FantasyTeamMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Exchange")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FantasyTeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvestReviewPostId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PriceDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceOnPublicationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StockSymbol")
                        .HasColumnType("TEXT");

                    b.HasKey("FantasyTeamMemberId");

                    b.HasIndex("FantasyTeamId");

                    b.HasIndex("InvestReviewPostId");

                    b.ToTable("FantasyTeamMembers");
                });

            modelBuilder.Entity("Stonks.Db.Models.InvestReviewPost", b =>
                {
                    b.Property<int>("InvestReviewPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalId")
                        .HasColumnType("TEXT");

                    b.Property<int>("InvestReviewSourceId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("InvestReviewPostId");

                    b.HasIndex("InvestReviewSourceId");

                    b.ToTable("InvestReviewPosts");
                });

            modelBuilder.Entity("Stonks.Db.Models.InvestReviewSource", b =>
                {
                    b.Property<int>("InvestReviewSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("InvestReviewSourceId");

                    b.ToTable("InvestReviewSources");
                });

            modelBuilder.Entity("Stonks.Db.Models.FantasyTeamMember", b =>
                {
                    b.HasOne("Stonks.Db.Models.FantasyTeam", null)
                        .WithMany("TeamMembers")
                        .HasForeignKey("FantasyTeamId");

                    b.HasOne("Stonks.Db.Models.InvestReviewPost", "InvestReviewPost")
                        .WithMany()
                        .HasForeignKey("InvestReviewPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stonks.Db.Models.InvestReviewPost", b =>
                {
                    b.HasOne("Stonks.Db.Models.InvestReviewSource", "InvestReviewSource")
                        .WithMany("Posts")
                        .HasForeignKey("InvestReviewSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
